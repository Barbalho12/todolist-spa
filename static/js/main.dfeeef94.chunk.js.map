{"version":3,"sources":["styles/index.js","API.js","pages/Main/styles.js","pages/Main/index.js","App.js","index.js"],"names":["Container","styled","div","createGlobalStyle","PATH_BASE","PATH","API","findAll","a","url","fetch","response","findAllCompleteds","findAllLefts","setCompleted","id","isCompleted","method","create","taskDescription","headers","body","JSON","stringify","delete","update","task","webSocketURL","h1","useStyles","makeStyles","theme","list","maxHeight","overflow","width","maxWidth","justifyContent","backgroundColor","palette","background","paper","padding","root","bullet","display","margin","transform","pos","marginBottom","button","inputtext","container","flexDirection","title","color","primary","main","starting","CheckboxList","classes","React","useState","name","setName","optionPage","setOptionPage","listItens","setListItens","setClientRef","tempOptionPage","then","json","handleToggle","completed","handleSubmit","event","preventDefault","className","onSubmit","noValidate","autoComplete","TextField","value","label","onChange","e","target","Button","variant","onClick","List","map","ListItem","key","role","undefined","dense","ListItemIcon","Checkbox","edge","checked","tabIndex","disableRipple","ListItemText","description","ListItemSecondaryAction","IconButton","aria-label","BottomNavigation","newValue","showLabels","BottomNavigationAction","icon","topics","onMessage","msg","ref","client","Main","Card","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dfeeef94.chunk.js","sourcesContent":["import styled, { createGlobalStyle } from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n`;\n\nexport default createGlobalStyle`\n  * {\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n      outline: 0;\n    }\n    html,\n    body,\n    #root {\n      height: 100%;\n    }\n    body {\n      text-rendering: optimizeLegibility !important;\n      font-family: sans-serif;\n      -webkit-font-smoothing: antialiased;\n      background: #eee;\n    }\n`;","\n// const PATH_BASE = \"http://10.40.1.57:8080\";\nconst PATH_BASE = `https://tdl-backend.herokuapp.com`;\n\nconst PATH = `${PATH_BASE}/tasks`;\n\nconst API = {\n    findAll: async () => {\n        const url = `${PATH}`;\n        const response = await fetch(url);\n        return response;\n    },\n\n    findAllCompleteds : async () => {\n        const url = `${PATH}/completeds`;\n        const response = await fetch(url);\n        return response;\n    },\n\n    findAllLefts : async () => {\n        const url = `${PATH}/lefts`;\n        const response = await fetch(url);\n        return response;\n    },\n\n    setCompleted : async (id, isCompleted) => {\n        const url = `${PATH}/${id}/set-completed/${isCompleted}`;\n        const response = await fetch(url, {method:'PUT'});\n        return response;\n    },\n\n    create : async (taskDescription) => {\n        const url = `${PATH}`;\n        const response = await fetch(url, {\n            method:'POST',  \n            headers:{\n                \"Content-Type\":\"application/json\"\n            }, \n            body:JSON.stringify(taskDescription)\n        });\n        return response;\n    },\n\n    delete : async (id) => {\n        const url = `${PATH}/${id}`;\n        const response = await fetch(url, {method:'DELETE'});\n        return response;\n    },\n\n    update : async (id, task) => {\n        const url = `${PATH}/${id}`;\n        const response = await fetch(url, {\n            method:'PUT',  \n            headers:{\n                \"Content-Type\":\"application/json\"\n            }, \n            body:JSON.stringify(task)\n        });\n        return response;\n    },\n\n    webSocketURL:`${PATH_BASE}/subscribe`\n}\n\nexport default API;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Title = styled.h1`\n  color: #009cde;\n`;","import React from 'react';\n\nimport API from '../../API'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\n\nimport ClearIcon from '@material-ui/icons/Clear';\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\n\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\n\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\n\nimport TextField from '@material-ui/core/TextField';\nimport { Container } from './styles';\n\nimport Card from '@material-ui/core/Card';\n\n\n// import Websocket from 'react-websocket';\nimport SockJsClient from 'react-stomp';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n  list:{\n    maxHeight: 300, \n    overflow: 'auto',\n    width: '100%',\n    maxWidth: 360,\n    justifyContent: \"center\",\n    backgroundColor: theme.palette.background.paper,\n    padding:'10px'\n  },\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    justifyContent: \"center\",\n    backgroundColor: theme.palette.background.paper,\n    padding:'10px'\n  },\n  \n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n    \n  },\n  pos: {\n    marginBottom: 12,\n  },\n  button:{\n    margin: \"10px\",\n    width:\"90%\"\n  },\n  inputtext: {\n    margin: \"10px\",\n    width: \"90%\"\n  },\n  container: {\n    flexDirection: 'column',\n\n  },\n  title: {\n    margin:\"20px\",\n    color: theme.palette.primary.main,\n  }\n}));\n\nlet starting  = true;\n\nfunction CheckboxList() {\n  const classes = useStyles();\n  const [name,setName] = React.useState();\n  const [optionPage, setOptionPage] = React.useState(0);\n  const [listItens, setListItens] = React.useState([]);\n  const [clientRef, setClientRef] = React.useState([]);\n\n  let tempOptionPage = 0;\n\n  function update(){\n    if(tempOptionPage === 0){\n      API.findAll().then(response => {\n        response.json().then( list => {\n          setListItens(list);\n        });\n      });\n    } else if(tempOptionPage === 1){\n      API.findAllLefts().then(response => {\n        response.json().then( list => {\n          setListItens(list);\n        });\n      });\n    } else if(tempOptionPage === 2){\n      API.findAllCompleteds().then(response => {\n        response.json().then( list => {\n          setListItens(list);\n        });\n      });\n    }\n  }\n\n  if(starting){\n    update();\n    setName(\"\");\n    starting = false;\n  }\n\n  const handleToggle = (task) => () => {\n    task.completed = !task.completed;\n    API.setCompleted(task.id, task.completed).then(response => {\n      update();\n    })\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    API.create(name).then( response => {\n      setName('');\n      update();\n    });\n  }\n\n  const buttomNavigationChange = (event, newValue) => {\n    setOptionPage(newValue);\n    tempOptionPage = newValue;\n    update();\n  }\n\n  \n\n  const deleteTask = (id) => {\n    API.delete(id).then( response => {\n      update();\n    });\n  }\n\n  return (\n    <div>\n      <form className={classes.inputtext} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n        <TextField id=\"standard-basic\" value={name} label=\"Nova tarefa\" onChange={ (e) => { setName(e.target.value)} } className={classes.inputtext} />\n        <Button variant=\"contained\" onClick={handleSubmit} color=\"primary\" className={classes.button}>ADICIONAR</Button>\n      </form>\n\n\n     \n        <List className={classes.list}>\n          {listItens.map((task) => {\n            return (\n              <ListItem key={`checkbox-list-${task.id}`} role={undefined} dense button onClick={handleToggle(task)}>\n                <ListItemIcon>\n                  <Checkbox\n                    edge=\"start\"\n                    checked={task.completed}\n                    tabIndex={task.id}\n                    disableRipple\n                  />\n                </ListItemIcon>\n                <ListItemText id={`checkbox-description-${task.id}`} primary={task.description} />\n                <ListItemSecondaryAction>\n                  <IconButton edge=\"end\" color=\"secondary\" aria-label=\"clear\" onClick={() => { {deleteTask(task.id)} }} >\n                    <ClearIcon />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            );\n          })}\n        </List>\n     \n\n\n      <BottomNavigation\n        value={optionPage}\n        onChange={buttomNavigationChange} \n        showLabels className={classes.root}>\n        <BottomNavigationAction label=\"Todas\"  value={0} icon={<FormatListBulletedIcon />} />\n        <BottomNavigationAction label=\"Pendentes\" value={1}  icon={<QueryBuilderIcon />} />\n        <BottomNavigationAction label=\"Concluídas\" value={2}  icon={<DoneAllIcon />} />\n      </BottomNavigation>\n      <SockJsClient url={API.webSocketURL} topics={['/topic/tasks']}\n            onMessage={(msg) => { update(); }}\n            ref={ (client) => { setClientRef(client) }} />\n      </div>\n  );\n}\n\nfunction Main() {\n  const classes = useStyles();\n\n  return (\n    <Container className={classes.container}>\n      <h1 className={classes.title}>TODO List</h1>\n      <Card className={classes.root}>\n        <CheckboxList/>\n      </Card>\n    </Container>\n  );\n}\n\nexport default Main;","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\n// import Routes from './routes';\n\nimport GlobalStyle, { Container } from './styles';\n\n\nimport Main from './pages/Main';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <GlobalStyle />\n      <Container>\n        {/* <Routes /> */}\n        <Main />\n      </Container>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}